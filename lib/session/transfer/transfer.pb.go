// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: session/transfer/transfer.proto

package transfer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	block "projekt/core/lib/session/transfer/block"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Symbols defined in public import of session/transfer/block/block.proto.

type Block = block.Block

type MessageType int32

const (
	MessageTypeNone          MessageType = 0
	MessageTypeHeader        MessageType = 2
	MessageTypeAcknowledge   MessageType = 3
	MessageTypeBlock         MessageType = 4
	MessageTypeBlockReceived MessageType = 5
	MessageTypeRedoBlock     MessageType = 6
	MessageTypeDataSent      MessageType = 7
	MessageTypeDataReceived  MessageType = 8
	MessageTypeAbort         MessageType = 9
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "MESSAGE_TYPE_NONE",
		2: "MESSAGE_TYPE_HEADER",
		3: "MESSAGE_TYPE_ACKNOWLEDGE",
		4: "MESSAGE_TYPE_BLOCK",
		5: "MESSAGE_TYPE_BLOCK_RECEIVED",
		6: "MESSAGE_TYPE_REDO_BLOCK",
		7: "MESSAGE_TYPE_DATA_SENT",
		8: "MESSAGE_TYPE_DATA_RECEIVED",
		9: "MESSAGE_TYPE_ABORT",
	}
	MessageType_value = map[string]int32{
		"MESSAGE_TYPE_NONE":           0,
		"MESSAGE_TYPE_HEADER":         2,
		"MESSAGE_TYPE_ACKNOWLEDGE":    3,
		"MESSAGE_TYPE_BLOCK":          4,
		"MESSAGE_TYPE_BLOCK_RECEIVED": 5,
		"MESSAGE_TYPE_REDO_BLOCK":     6,
		"MESSAGE_TYPE_DATA_SENT":      7,
		"MESSAGE_TYPE_DATA_RECEIVED":  8,
		"MESSAGE_TYPE_ABORT":          9,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_session_transfer_transfer_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_session_transfer_transfer_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_session_transfer_transfer_proto_rawDescGZIP(), []int{0}
}

type Abort_Reason int32

const (
	AbortReasonUnknown Abort_Reason = 0
	// Either side may cancel the transfer.
	AbortReasonCanceled Abort_Reason = 1 // <->
	// The data is too large to store.
	AbortReasonTooLarge Abort_Reason = 2 // <-
	// The received data is not usable by the receiver.
	// This could be e.g. because blocks overlap and have different data at the intersection
	// or the last packet does not contain enough bytes to fill the total_size.
	// This should not happen when the sender properly fragments the data.
	AbortReasonBadData Abort_Reason = 3 // <-
	// The received total checksum does not match
	// with the checksum that was computed by the receiver.
	AbortReasonBadTotalChecksum Abort_Reason = 4
)

// Enum value maps for Abort_Reason.
var (
	Abort_Reason_name = map[int32]string{
		0: "ABORT_REASON_UNKNOWN",
		1: "ABORT_REASON_CANCELED",
		2: "ABORT_REASON_TOO_LARGE",
		3: "ABORT_REASON_BAD_DATA",
		4: "ABORT_REASON_BAD_TOTAL_CHECKSUM",
	}
	Abort_Reason_value = map[string]int32{
		"ABORT_REASON_UNKNOWN":            0,
		"ABORT_REASON_CANCELED":           1,
		"ABORT_REASON_TOO_LARGE":          2,
		"ABORT_REASON_BAD_DATA":           3,
		"ABORT_REASON_BAD_TOTAL_CHECKSUM": 4,
	}
)

func (x Abort_Reason) Enum() *Abort_Reason {
	p := new(Abort_Reason)
	*p = x
	return p
}

func (x Abort_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Abort_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_session_transfer_transfer_proto_enumTypes[1].Descriptor()
}

func (Abort_Reason) Type() protoreflect.EnumType {
	return &file_session_transfer_transfer_proto_enumTypes[1]
}

func (x Abort_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Abort_Reason.Descriptor instead.
func (Abort_Reason) EnumDescriptor() ([]byte, []int) {
	return file_session_transfer_transfer_proto_rawDescGZIP(), []int{7, 0}
}

// Important information that is required for reassembly of blocks.
// The metadata describes the format of the data.
type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata  *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	TotalSize uint64    `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	BlockSize uint64    `protobuf:"varint,3,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_transfer_transfer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_session_transfer_transfer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_session_transfer_transfer_proto_rawDescGZIP(), []int{0}
}

func (x *Header) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Header) GetTotalSize() uint64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *Header) GetBlockSize() uint64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

// Descriptive metadata about the content.
type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_transfer_transfer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_session_transfer_transfer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_session_transfer_transfer_proto_rawDescGZIP(), []int{1}
}

func (x *Metadata) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type Acknowledge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Acknowledge) Reset() {
	*x = Acknowledge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_transfer_transfer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Acknowledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acknowledge) ProtoMessage() {}

func (x *Acknowledge) ProtoReflect() protoreflect.Message {
	mi := &file_session_transfer_transfer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acknowledge.ProtoReflect.Descriptor instead.
func (*Acknowledge) Descriptor() ([]byte, []int) {
	return file_session_transfer_transfer_proto_rawDescGZIP(), []int{2}
}

// Acknowledges that a block has been received.
type BlockReceived struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *BlockReceived) Reset() {
	*x = BlockReceived{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_transfer_transfer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockReceived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockReceived) ProtoMessage() {}

func (x *BlockReceived) ProtoReflect() protoreflect.Message {
	mi := &file_session_transfer_transfer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockReceived.ProtoReflect.Descriptor instead.
func (*BlockReceived) Descriptor() ([]byte, []int) {
	return file_session_transfer_transfer_proto_rawDescGZIP(), []int{3}
}

func (x *BlockReceived) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

// Sent by the receiver if they are certain that the sender thinks
// the specified block was received, when in reality it was not.
// This can be the case when receiving a block
// that comes after the block that is specified in this packet,
// while we should be receiving all packets in the order they were sent.
// This would signal to us that a block is missing.
// The same goes with the Done packet which marks the end of the transfer
// and which comes only after all blocks have been sent.
// The sender must send the specified block again.
// useful when:
// - the checksum is not correct for some reason
// - ...
type RedoBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *RedoBlock) Reset() {
	*x = RedoBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_transfer_transfer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedoBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedoBlock) ProtoMessage() {}

func (x *RedoBlock) ProtoReflect() protoreflect.Message {
	mi := &file_session_transfer_transfer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedoBlock.ProtoReflect.Descriptor instead.
func (*RedoBlock) Descriptor() ([]byte, []int) {
	return file_session_transfer_transfer_proto_rawDescGZIP(), []int{4}
}

func (x *RedoBlock) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type DataSent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalChecksum []byte `protobuf:"bytes,1,opt,name=total_checksum,json=totalChecksum,proto3" json:"total_checksum,omitempty"` // SHA-256(total-data)
}

func (x *DataSent) Reset() {
	*x = DataSent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_transfer_transfer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSent) ProtoMessage() {}

func (x *DataSent) ProtoReflect() protoreflect.Message {
	mi := &file_session_transfer_transfer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSent.ProtoReflect.Descriptor instead.
func (*DataSent) Descriptor() ([]byte, []int) {
	return file_session_transfer_transfer_proto_rawDescGZIP(), []int{5}
}

func (x *DataSent) GetTotalChecksum() []byte {
	if x != nil {
		return x.TotalChecksum
	}
	return nil
}

// The sender first signals that they sent all blocks.
// The receiver may query any potentially missing blocks.
// Finally the receiver sends done too.
// The transfer is complete and the channel my be closed.
// This packet must first be sent by the sender, then by the receiver.
// The receiver should only send it after it received Done.
type DataReceived struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DataReceived) Reset() {
	*x = DataReceived{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_transfer_transfer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataReceived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataReceived) ProtoMessage() {}

func (x *DataReceived) ProtoReflect() protoreflect.Message {
	mi := &file_session_transfer_transfer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataReceived.ProtoReflect.Descriptor instead.
func (*DataReceived) Descriptor() ([]byte, []int) {
	return file_session_transfer_transfer_proto_rawDescGZIP(), []int{6}
}

// <->
// Any side may abort at any time during the process.
type Abort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason Abort_Reason `protobuf:"varint,1,opt,name=reason,proto3,enum=transfer.Abort_Reason" json:"reason,omitempty"`
}

func (x *Abort) Reset() {
	*x = Abort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_session_transfer_transfer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Abort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Abort) ProtoMessage() {}

func (x *Abort) ProtoReflect() protoreflect.Message {
	mi := &file_session_transfer_transfer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Abort.ProtoReflect.Descriptor instead.
func (*Abort) Descriptor() ([]byte, []int) {
	return file_session_transfer_transfer_proto_rawDescGZIP(), []int{7}
}

func (x *Abort) GetReason() Abort_Reason {
	if x != nil {
		return x.Reason
	}
	return AbortReasonUnknown
}

var File_session_transfer_transfer_proto protoreflect.FileDescriptor

var file_session_transfer_transfer_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x1a, 0x22, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x76, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x26, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x0d, 0x0a, 0x0b, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x22, 0x25,
	0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x21, 0x0a, 0x09, 0x52, 0x65, 0x64, 0x6f, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x31, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0x0e, 0x0a, 0x0c, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x22, 0xd3, 0x01, 0x0a, 0x05,
	0x41, 0x62, 0x6f, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x14, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x42,
	0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45,
	0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10,
	0x02, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f,
	0x41, 0x42, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x42, 0x41, 0x44,
	0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x53, 0x55, 0x4d, 0x10,
	0x04, 0x2a, 0x85, 0x02, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10,
	0x02, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x41, 0x43, 0x4b, 0x4e, 0x4f, 0x57, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x10, 0x03, 0x12,
	0x16, 0x0a, 0x12, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x45, 0x53, 0x53, 0x41,
	0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x52, 0x45,
	0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x44, 0x4f, 0x5f, 0x42, 0x4c,
	0x4f, 0x43, 0x4b, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x45, 0x4e, 0x54, 0x10,
	0x07, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10,
	0x08, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x10, 0x09, 0x42, 0x23, 0x5a, 0x21, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x6b, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_session_transfer_transfer_proto_rawDescOnce sync.Once
	file_session_transfer_transfer_proto_rawDescData = file_session_transfer_transfer_proto_rawDesc
)

func file_session_transfer_transfer_proto_rawDescGZIP() []byte {
	file_session_transfer_transfer_proto_rawDescOnce.Do(func() {
		file_session_transfer_transfer_proto_rawDescData = protoimpl.X.CompressGZIP(file_session_transfer_transfer_proto_rawDescData)
	})
	return file_session_transfer_transfer_proto_rawDescData
}

var file_session_transfer_transfer_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_session_transfer_transfer_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_session_transfer_transfer_proto_goTypes = []interface{}{
	(MessageType)(0),      // 0: transfer.MessageType
	(Abort_Reason)(0),     // 1: transfer.Abort.Reason
	(*Header)(nil),        // 2: transfer.Header
	(*Metadata)(nil),      // 3: transfer.Metadata
	(*Acknowledge)(nil),   // 4: transfer.Acknowledge
	(*BlockReceived)(nil), // 5: transfer.BlockReceived
	(*RedoBlock)(nil),     // 6: transfer.RedoBlock
	(*DataSent)(nil),      // 7: transfer.DataSent
	(*DataReceived)(nil),  // 8: transfer.DataReceived
	(*Abort)(nil),         // 9: transfer.Abort
}
var file_session_transfer_transfer_proto_depIdxs = []int32{
	3, // 0: transfer.Header.metadata:type_name -> transfer.Metadata
	1, // 1: transfer.Abort.reason:type_name -> transfer.Abort.Reason
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_session_transfer_transfer_proto_init() }
func file_session_transfer_transfer_proto_init() {
	if File_session_transfer_transfer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_session_transfer_transfer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_transfer_transfer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_transfer_transfer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Acknowledge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_transfer_transfer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockReceived); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_transfer_transfer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedoBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_transfer_transfer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_transfer_transfer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataReceived); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_session_transfer_transfer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Abort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_session_transfer_transfer_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_session_transfer_transfer_proto_goTypes,
		DependencyIndexes: file_session_transfer_transfer_proto_depIdxs,
		EnumInfos:         file_session_transfer_transfer_proto_enumTypes,
		MessageInfos:      file_session_transfer_transfer_proto_msgTypes,
	}.Build()
	File_session_transfer_transfer_proto = out.File
	file_session_transfer_transfer_proto_rawDesc = nil
	file_session_transfer_transfer_proto_goTypes = nil
	file_session_transfer_transfer_proto_depIdxs = nil
}
